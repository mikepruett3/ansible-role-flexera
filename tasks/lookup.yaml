---
# Lookup tasks file for ansible-role-flexera

- name: "Check for Managesoft install directory"
  ansible.builtin.stat:
    path: /opt/managesoft
  register: result
  ignore_errors: true

- name: "Set Facts for Managesoft install directory"
  ansible.builtin.set_fact:
    managesoft_home: /opt/managesoft
  when:
    - result.stat.exists
    - result.stat.isdir
    - result.failed is false

- name: "Set Facts for Install variable"
  ansible.builtin.set_fact:
    install: true
  when:
    - managesoft_home is not defined
    - result.failed is true

- name: "Check for Managesoft config directory"
  ansible.builtin.stat:
    path: /var/opt/managesoft
  register: result
  ignore_errors: true

- name: "Set Facts for Managesoft config directory"
  ansible.builtin.set_fact:
    managesoft_config_dir: /var/opt/managesoft
  when:
    - result.stat.exists
    - result.stat.isdir
    - result.failed is false

- name: "Collect fingerprint of the Managesoft Certificate"
  ansible.builtin.shell:
    cmd: openssl x509 -noout -fingerprint -sha256 -inform pem -in '{{ managesoft_config_dir }}/etc/ssl/cert.pem'
  register: result

- name: "Set Facts for Managesoft Certificate fingerprint"
  ansible.builtin.set_fact:
    certificate: "{{ result.stdout | split('=') | last }}"
  when:
    - result.failed is false

#- name: "Get the version of installed Universal Forwarder Client"
#  ansible.builtin.shell:
#    cmd: ./splunk version | tail -n 1 | awk '{ print $4 }'
#    chdir: "{{ splunk_home }}/bin"
#  register: result
#  when:
#    - splunk_home is defined

#- name: "Set Facts for installed Universal Forwarder Client version"
#  ansible.builtin.set_fact:
#    splunk_version: "{{ result.stdout }}"
#  when:
#    - result.failed is false

#- name: "Set Facts for Upgrade variable"
#  ansible.builtin.set_fact:
#    upgrade: true
#  when:
#    - splunk_version is defined
#    - splunk_version != package_version
#    #- splunk_version != '7'
