---
# Upgrade tasks file for ansible-role-flexera

- name: "Test if upgrade boolean variable is set correctly"
  ansible.builtin.assert:
    that:
      - upgrade is defined
      - upgrade is boolean
    quiet: yes

- name: "Create software directory under root homedir, if it does not exist"
  ansible.builtin.file:
    path: "/root/software/flexera/"
    state: directory

- name: "Check if installer package already exist"
  ansible.builtin.stat:
    path: "/root/software/flexera/{{ package_name }}"
  register: package

- name: "Download installer package from local repository"
  ansible.builtin.get_url:
    url: "{{ software_url }}/{{ package_name }}"
    dest: "/root/software/flexera/"
    validate_certs: no
    mode: '0770'
  when:
    - not package.stat.exists | bool

- name: "Download Flexera Certificate & Response files to /var/tmp"
  ansible.builtin.get_url:
    url: "{{ software_url }}/{{ item }}"
    dest: "/var/tmp/"
    validate_certs: no
    mode: '0774'
  with_items:
    - "{{ response_file }}"
    - "{{ cert_file }}"
  when:
    - not package.stat.exists | bool

- name: "Upgrade package (yum)"
  ansible.builtin.yum:
    name: "/root/software/flexera/{{ package_name }}"
    state: present
  when:
    - ansible_facts['pkg_mgr'] == 'yum'

- name: "Upgrade package (dnf)"
  ansible.builtin.dnf:
    name: "/root/software/flexera/{{ package_name }}"
    state: present
    disable_gpg_check: yes
  when:
    - ansible_facts['pkg_mgr'] == 'dnf'

- name: "Upgrade package (apt)"
  ansible.builtin.apt:
    deb: "/root/software/flexera/{{ package_name }}"
    state: present
  when:
    - ansible_facts['pkg_mgr'] == 'apt'
